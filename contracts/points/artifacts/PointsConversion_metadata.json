{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pointsManagementAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_conversionRate",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newConversionRate",
						"type": "uint256"
					}
				],
				"name": "ConversionRateUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "pointsEarned",
						"type": "uint256"
					}
				],
				"name": "TokensConverted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "conversionRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokensAmount",
						"type": "uint256"
					}
				],
				"name": "convertTokensToPoints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newConversionRate",
						"type": "uint256"
					}
				],
				"name": "updateConversionRate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"convertTokensToPoints(address,uint256)": {
					"details": "Convert tokens to points and add the points to the user's balance.",
					"params": {
						"_tokensAmount": "The number of tokens to be converted to points.",
						"_user": "The wallet address of the user."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateConversionRate(uint256)": {
					"details": "Update the conversion rate from tokens to points.",
					"params": {
						"_newConversionRate": "The new conversion rate."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Users/chris/Documents/GitHub/AirlineRewards/contracts/points/PointsConversion.sol": "PointsConversion"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"Users/chris/Documents/GitHub/AirlineRewards/contracts/points/PointsConversion.sol": {
			"keccak256": "0x0491db18c3e6dc6cd4a58002c8c5affeec07e553e00c80425ab57496ef200b70",
			"urls": [
				"bzz-raw://239fb6d84bad0cbcd29fe9e6ce304194ff66a1fe12ae266b1d74312257f3d7bb",
				"dweb:/ipfs/QmZAGkUeEULT4UgpQ8Z7ps1ESRXe1yqv4cnJV6DN9tWMWS"
			]
		},
		"Users/chris/Documents/GitHub/AirlineRewards/contracts/points/PointsManagement.sol": {
			"keccak256": "0xccae96d334d4c5da0ff3c485254e5547dd588880ee191d4517d3114bdcc7ecf3",
			"urls": [
				"bzz-raw://fdaeb47fd67ffd042707deeb512777006228354b8f04c34faf1da67960b2cd02",
				"dweb:/ipfs/QmVnHxTGmjwogVQVtGQ26QE3GvU963Z3eyFSCiKfShNdsf"
			]
		}
	},
	"version": 1
}